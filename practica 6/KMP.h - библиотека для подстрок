//Эта функция возвращает номер строки, с которого начинается найденная подстрока, если подстрока не найдена, то возвращает -1
//Использует алгоритм Кнута-Морриса-Пратта

#include <iostream>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <windows.h>

using namespace std;
int seek_substring_KMP (char s[], char q[])
	{
	int i, j, N, M;
	N = strlen(s);
	M = strlen(q);
	int *d =(int*)malloc(M*sizeof(int));
	i=0;
	j=-1;
	d[0]=-1;
	while(i<M-1)
		{
		while((j>=0) && (q[j]!=q[i]))
			j = d[j];
		i++;
		j++;
		if(q[i]==q[j])
			d[i]=d[j];
		else
			d[i]= j;
		}
	for(i=0,j=0;(i<N)&&(j<M); i++,j++)
		while((j>=0)&&(q[j]!=s[i]))
			j=d[j];
	free (d);
	if (j==M)
		return i-j;
	else 
		return -1;
	};
//Функция возвращает 0, если буква строчная, 1 - если заглавная

int seek_glav_neglav__word(char x)
{
    if (x=='a') return 0;
    if (x=='b') return 0;
    if (x=='c') return 0;
    if (x=='d') return 0;
    if (x=='e') return 0;
    if (x=='f') return 0;
    if (x=='g') return 0;
    if (x=='h') return 0;
    if (x=='i') return 0;
    if (x=='j') return 0;
    if (x=='k') return 0;
    if (x=='l') return 0;
    if (x=='m') return 0;
    if (x=='n') return 0;
    if (x=='o') return 0;
    if (x=='p') return 0;
    if (x=='q') return 0;
    if (x=='r') return 0;
    if (x=='s') return 0;
    if (x=='t') return 0;
    if (x=='u') return 0;
    if (x=='v') return 0;
    if (x=='w') return 0;
    if (x=='x') return 0;
    if (x=='y') return 0;
    if (x=='z') return 0;
    if (x=='A') return 1;
    if (x=='B') return 1;
    if (x=='C') return 1;
    if (x=='D') return 1;
    if (x=='E') return 1;
    if (x=='F') return 1;
    if (x=='G') return 1;
    if (x=='H') return 1;
    if (x=='I') return 1;
    if (x=='J') return 1;
    if (x=='K') return 1;
    if (x=='L') return 1;
    if (x=='M') return 1;
    if (x=='N') return 1;
    if (x=='O') return 1;
    if (x=='P') return 1;
    if (x=='Q') return 1;
    if (x=='R') return 1;
    if (x=='S') return 1;
    if (x=='T') return 1;
    if (x=='U') return 1;
    if (x=='V') return 1;
    if (x=='W') return 1;
    if (x=='X') return 1;
    if (x=='Y') return 1;
    if (x=='Z') return 1;
}

//Функция меняет цвет выводящихся на консоль букв и фона консоли

using namespace std;

enum ConsoleColor
{
    Black         = 0,
    Blue          = 1,
    Green         = 2,
    Cyan          = 3,
    Red           = 4,
    Magenta       = 5,
    Brown         = 6,
    LightGray     = 7,
    DarkGray      = 8,
    LightBlue     = 9,
    LightGreen    = 10,
    LightCyan     = 11,
    LightRed      = 12,
    LightMagenta  = 13,
    Yellow        = 14,
    White         = 15
};
void SetColor(int text, int background)
{
   HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
   SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text));
}
